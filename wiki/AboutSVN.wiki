#summary Здесь описывается порядок организации кода в SVN

===Общая информация===

У нас есть 2 ветки: _trunk_ и _branches_. В _trunk_ мы храним более менее стабильную версию. Вся разработка ведется в ветке _braches_. Раз в неделю-две делается снимок _branches_ и помещается в отдельную папку(архив) вида: _%currentDate%snapshot_.


===Порядок работы===
  # Все делают commit только в текущую ветку разработки в соответствующем каталоге branch.
  # Выкладываем только:
    * *исходный* код
    * *jar*-архивы
    * библиотеки
    * файлы с веб контентом: html, css, xsl, js и т.д.
    * config-файлы, xml-файлы
    * *_!!! Никаких .class-файлов !!!_*
  # В trunk нужно класть только код, проверенный на review и который работает стабильно и не рушит всю систему (т.е. проходит все тесты и нормально функционирует с остальными готовыми компонентами)
  # С некоторой периодичностью Ваня, как ответственный за код в svn, делает merge с текущей стабильной версией.
  # После этого Кирилл, как ответственный за сборку проекта обновляет build-файлы и осуществляет процесс continious integration.

===Про иерархию===
На верхнем уровне(в корне):
 * _libs/_ - в этой папке лежат библиотеки
 * _src/_ - в этой папке лежат исходные коды
   * _java/_ - в этой папке java-код 
   * _web/_ - в этой папке лежат файлы и папки относящиеся к Tomcat
 * _resources/_ - в этой папке лежат все дополнительные файлы, необходимые для работы.(наверно в подпапках вида - miner, indexer..)
 * _build/_ - в этой папке лежат скомпилированные файлы (-ая версия)
 * _build.xml_ - и другие файлы необходимые для сборки проекта