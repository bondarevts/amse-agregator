#Здесь мы решаем и обсуждаем как взаимодействуют наши кусочки кода.

= Архитектура =

Наша самая ближайшая задача, это собрать всю систему в минимальной конфигурации, и уже потом, установив взаимодействие кусочков его наращивать. Немного подумав было решено:

== Связь Miner < - > Хранилище ==
Miner будет использовать Web Harvester. В нем пишуться конфиг файлы отдельно под каждый ресурс в зависимости от того, что мы хотим от туда вытащить и ресурса. 
Хранильщики(Кирилл, Ира) решили использовать нереляционную БД - MongoDB.

Было решено, в кач-ве минимального набора сущностей взять:
   * Достопримечательности
   * Города
   * Отзывы
   * Возможно: (курорты, еда, отели)

*Достопримечательность* содержит в себе поля: 
 * Название
 * Описание
 * Город/(Ближайший город)
 * Координаты (+)
 * Фото
 * Адрес

*Город* содержит в себе:
 * Название
 * Описание
 * Фото
 * Координаты (+)

*Отзывы* содержат:
 * кто написал
 * когда написал
 * что написал
 * оценка (+)

Получилось следующее: я выбираю 5-10 сайтов где есть: достопримечательности, описания городов и отзывы. Пишу под них конфиг файлы, чтобы web harvester пройдясь по сайтам выдал упорядоченную информацию вида:
 (если это достопримечательность)

 Колизей // Это большой стадион... // Рим // картинка // адрес // еще_поля



Хранилище(Ира, Кирилл) напишут классы, которую обеспечат удобный доступ к базе.
Планируеться, что выглядеть будет примерно так:
{{{
ArchAttraction myArchAttractian = new ArchAttractian();
myArchAttraction.setName("колизей");
myArchAttraction.setCity("Рим");
//................................
BazaClassName.addArchAttraction(myArchAttractian);
}}}

Как только эти классы напишуться упорядоченная информация из Miner'a используя эти методы будет попадет в сырую БД.

Получаем: в кач-ве супер-первого этапа *Miner* будет собирать, как минимум: *Достопримечательности*, *Города*, *Отзывы*. 
Хранильщики напишут базовые классы для хранения этих сущностей, а так же их наследников.
Т.к. в последствии планируеться выделять например _достопримечательности_: на _архитектурные_, _природные_, _музеи_ .... ; но в данный момент уже нужные базовые классы для взаимодействия с БД.

*UPD* Хранильщики и майнеры все это знают, поэтому относительно этого кусочка планируеться в ближайшее время реализовать Miner, который уже умеет добавлять собранную информацию в базу, используя класcы хранильщика.

В дальнейшем Miner начнет собирать другие сущности такие как кафе, отели, а Хранилище обеспечит доступ к БД для хранения этих сущностей.