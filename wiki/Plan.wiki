#summary На этой странице описан наш план
#labels Plan,Phase-Requirements

Обозначу тут круг задач и предложений, которые мы будем решать по ходу этого семестра. Предлагаю обсуждать что-то, если не понравится или есть комментарии.

== Usability (front-end) && Public UI ==

 # Сделать удобным просмотр конкретных объектов:
    ## сделать унификацию для GUI: чтобы одинаковые по типу объекты отображались одинаково, чтобы на соответствующих страничках совпадали шрифты, типы ссылок и т.д.; [http://code.google.com/p/amse-agregator/issues/detail?id=4 Наташа AC, issue 4,5]
    ## Описания лучше всего выводить по одному в виде краткого обзора на пару абзацев + ссылка на источник (на сайт аллтревел.мазафака-урл.ком). Володя сказал, что когда это дело пойдет в продакшн, не надо делать копипасты чужих текстов, это нелегально [http://code.google.com/p/amse-agregator/issues/detail?id=12 Наташа, issue 12];
    ## если есть картинка, хотелось бы знать, что на ней отображено и где это можно найти (в идеале -- ссылка на этот объект, как на википедии); [http://code.google.com/p/amse-agregator/issues/detail?id=15 Наташа, issue 15]
    ## если отображаем "что-то" (*_достопримечательность_*, *_город_*, *_страна_*), то очень хочется чтобы картинки про это место шли "параллельно" с текстом, а не так, чтобы сначала текст, а потом картинки, или наборот. В панелях сбоку отображать *_ближайшее_* или *_популярное_* в этом же городе, стране или неподалеку соответственно. [http://code.google.com/p/amse-agregator/issues/detail?id=4 Наташа AC, issue 4,5] + [http://code.google.com/p/amse-agregator/issues/detail?id=11 Паша В. AC, issue 11]
 # Очень нужна карта с отображением объектов.
 # В топ-блоках справа-слева надо подписывать категорию объекта, а также сделать ранжирование. Допустим, user видит город и говорит: отранжируй мне этот список по дворцам и соборам. Если user видит достопримечательность, то может сказать: отранжируй по ближайшим объектам. Этого сейчас очень не хватает. [http://code.google.com/p/amse-agregator/issues/detail?id=14 issue 14]
 # Сделать поддежрку доступа пользователей со всеми вытекающими последствиями [http://code.google.com/p/amse-agregator/issues/detail?id=8 Кирилл + Ваня, issue 8]:
   ## личная информация пользователя (нужна отдельная база);
   ## оставлять комментарии (~ twitter, facebook ...);
   ## уметь делать ранжирование информации на основе *_отзывов_* и *_предпочтений_* пользователей.
 # Если есть информация, то желательно выдавать ссылку на эту статью.
 # Хочется уметь выдавать ссылку на результаты поисковых запросов.
 # Сделать удобный расширенный поиск. Основная идея в том, что в поисковой строке писать локацию (например, "италия"). А потом категорию объектов задавать с помощью фильтров. Например, такая user story [http://code.google.com/p/amse-agregator/issues/detail?id=7 Тимофей, issue 7].

== Back-end ==
 # Правильно обрезать тэги в описаниях, чтобы слова не слипались; (_Ира вроде что-то уже выложила, надо посмотреть_) [http://code.google.com/p/amse-agregator/issues/detail?id=6 Ира, issue 6]
 # Добиться максимальной унификации в названиях объектов; [http://code.google.com/p/amse-agregator/issues/detail?id=6 Наташа, issue 6]
 # Намайнить координаты и положить их в базу; [http://code.google.com/p/amse-agregator/issues/detail?id=10 Паша В. + Кирилл AC, issue 10]
 # Кластеризация объектов по координатам; [http://code.google.com/p/amse-agregator/issues/detail?id=9 Паша Т., issue 9]
 # Научиться отображать объекты на карте;
 # Научитсья ранжировать информацию по популярности;
 # Научиться обображать короткое описание объекта (abstract). Тут два пути:
   ## Строить его на основе имеющегося (10% за этот вариант)
   ## Замайнить сайт, на котором есть такое краткое описание для каждого объекта (*_90% что так и будет*_). Например, на сайте ru.worldpoi.info есть такая информация. Даже у меня в конфиге это описание скрыто под переменной "descrA".
 # Добавить базу для пользователей и уметь хранить информацию о них. [http://code.google.com/p/amse-agregator/issues/detail?id=8 Кирилл + Ваня, issue 8]
 # Попробовать выцепить информацию о времени работы разных заведений (сейчас оно намайнено с сайта ляляля.ua). Перевести это время в GMT, и уметь грамотно его выводить. [http://code.google.com/p/amse-agregator/issues/detail?id=9 Паша Т., issue 9]
 # Научиться извлекать дополнительные параметры для объектов: например, если это "Собор Парижской Богоматери", то хочется знать, что это именно собор, более того, он католический. Вобщем, чтобы графа "тэги" у объектов не пустели. Все это нужно для расширенного поиска.
 # Уметь из набора текстов выбирать самый лучший: по набору каких-то слов, по "литературности" изложения и т.д. Задача творческая, тут подход индивидуальный [http://code.google.com/p/amse-agregator/issues/detail?id=13 Паша Т., issue 13]
 # Все exception'ы, которые вылетают, надо обрабатывать по-умному и выводить валидный контент. Т.е. выдавать код ошибки, часть stackTrace, надо подумать, это для всех задача, потому что exception'ы могут вываливаться у всех. [http://code.google.com/p/amse-agregator/issues/detail?id=16 ВСЕ, issue 16]
 # Научитсья работать с рубриками: знать, что данный объект это "_*то-то*_" или "_*то-то*_". Т.е. возможно придется написать пару-тройку методов для базы: типичных запросов к базе. Типа: <code>getAllObjectsByCategory(city_id, Database.CATEGORY);</code> [http://code.google.com/p/amse-agregator/issues/detail?id=17 issue 17]
 # Уметь находить ближайшие объекты по категории относительно данного. Типа: <code>getNearestByCategory(object_id, Database.CATEGORY)</code> [http://code.google.com/p/amse-agregator/issues/detail?id=18 issue 18]

------

Добавляем сюда комментарии, если таковые есть